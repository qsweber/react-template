name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install
      - run: npm run test
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
      - run: npm install
      - run: npm run build
      - run: zip -r build.zip build/*
      - uses: actions/upload-artifact@v2
        with:
          name: build
          path: build.zip
  infra:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
      - run: npm install
      - uses: pulumi/actions@v4
      - run: cd infrastructure && pulumi login ${{ secrets.PULUMI_CLOUD_URL }} && cd ..
      - run: cd infrastructure && pulumi preview --stack dev --non-interactive --expect-no-changes && cd ..
      - run: cd infrastructure && pulumi preview --stack production --non-interactive --expect-no-changes && cd ..
    env:
      PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: "us-west-2"
  deploy_dev:
    runs-on: ubuntu-latest
    needs: [test, build, infra]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: build
      - run: unzip build.zip # puts it into top level folder "build"
      - run: pip install awscli
      - run: aws s3 sync --acl public-read --delete ./build ${{ secrets.DEV_S3_BUCKET }}
      - run: aws configure set preview.cloudfront true
      - run: aws cloudfront create-invalidation --distribution-id ${{ secrets.DEV_CLOUDFRONT_DISTRIBUTION_ID }} --paths '/*'
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  deploy_production:
    runs-on: ubuntu-latest
    needs: [test, build, infra]
    if: github.event_name == 'push'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: build
      - run: unzip build.zip # puts it into top level folder "build"
      - run: pip install awscli
      - run: aws s3 sync --acl public-read --delete ./build ${{ secrets.S3_BUCKET }}
      - run: aws configure set preview.cloudfront true
      - run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths '/*'
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  release:
    runs-on: ubuntu-latest
    needs: [deploy_production]
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
      - uses: actions/download-artifact@v2
        with:
          name: build
      - name: get-npm-version
        id: package-version
        run: |
          VERSION=$(node -e "console.log(JSON.parse(fs.readFileSync('package.json')).version.replace(/\.\d+$/, ''))")
          VERSION+=".${{ github.run_number }}"
          echo "package-version=$(echo $VERSION)" >> $GITHUB_OUTPUT
      - name: create release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build.zip"
          name: Release ${{ steps.package-version.outputs.package-version }}
          tag: v${{ steps.package-version.outputs.package-version }}
